
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the authenticated user is the owner of a document via a 'userId' field
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    // - Anyone authenticated can create their own user document.
    // - Only the owner can read or update their own user document.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      // Delete is typically handled by backend functions or restricted
    }

    // ProviderProfiles collection
    // - Provider profiles can be read by anyone (for discovery).
    // - Only the authenticated owner (provider) can create or update their profile.
    match /providerProfiles/{providerId} {
      allow read: if true; // Publicly readable
      allow create: if isOwner(providerId) && request.resource.data.userId == request.auth.uid;
      allow update: if isOwner(providerId);
      // Delete is typically handled by backend functions or restricted
    }

    // Jobs collection
    // - Authenticated users can create jobs (clients).
    // - Jobs can be read by any authenticated user (providers need to see job listings).
    // - Only the client who posted the job can update it.
    match /jobs/{jobId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.clientId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.clientId == request.auth.uid;
      // Delete/cancel might need specific status updates rather than direct delete
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
